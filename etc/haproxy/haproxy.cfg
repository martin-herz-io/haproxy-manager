global
    log /dev/log local0
    log /dev/log local1 notice
    maxconn 2000
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    option  tcplog
    timeout connect 5s
    timeout client  30s
    timeout server  30s

# ──────────────── HTTPS (Port 443 – TCP, SNI) ────────────────
frontend https_in
    bind *:443
    mode tcp
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }

    acl is_kunde1 req.ssl_sni -m reg -i ^(.+\.)?kunde1\.de$
    acl is_kunde1 req.ssl_sni -m reg -i ^(.+\.)?kunde1-irgendwas\.com$

    acl is_kunde2 req.ssl_sni -m reg -i ^(.+\.)?kunde2\.de$
    acl is_kunde2 req.ssl_sni -m reg -i ^(.+\.)?kunde2-shop\.org$

    use_backend kunde1_https if is_kunde1
    use_backend kunde2_https if is_kunde2
    default_backend fallback_https

backend kunde1_https
    mode tcp
    server kunde1 192.168.100.50:443

backend kunde2_https
    mode tcp
    server kunde2 192.168.100.51:443

backend fallback_https
    mode tcp
    server fallback 192.168.100.99:443

# ──────────────── HTTP (Port 80 – HTTP, Host-Header) ────────────────
frontend http_in
    bind *:80
    mode http

    acl is_kunde1 hdr(host) -m reg -i ^(.+\.)?kunde1\.de$
    acl is_kunde1 hdr(host) -m reg -i ^(.+\.)?kunde1-irgendwas\.com$

    acl is_kunde2 hdr(host) -m reg -i ^(.+\.)?kunde2\.de$
    acl is_kunde2 hdr(host) -m reg -i ^(.+\.)?kunde2-shop\.org$

    use_backend kunde1_http if is_kunde1
    use_backend kunde2_http if is_kunde2
    default_backend fallback_http

backend kunde1_http
    mode http
    server kunde1 192.168.100.50:80

backend kunde2_http
    mode http
    server kunde2 192.168.100.51:80

backend fallback_http
    mode http
    server fallback 192.168.100.99:80
